{
  "stats": {
    "suites": 5,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2023-03-28T00:45:07.750Z",
    "end": "2023-03-28T00:50:16.257Z",
    "duration": 308507,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5a2b4011-2cd3-498d-ab85-fafa2a112275",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "433165ea-1edc-40b8-8322-46a65babd106",
          "title": "Scenario 1",
          "fullFile": "/Users/sethu/Documents/personal/selenium/test/Scenario_1.js",
          "file": "/test/Scenario_1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Transcript from student hub",
              "fullTitle": "Scenario 1 Open Transcript from student hub",
              "timedOut": false,
              "duration": 60335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\n  driver.manage().window().maximize();\n  try {\n      // open the web page\n      await driver.get('https://me.northeastern.edu');\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image1.png', encodedString, 'base64');\n      // Select myNortheasternLogin Based on class\n      await driver.findElement(By.className('idp')).click();\n      // Input username from env file\n      await driver.findElement(By.id('username')).sendKeys(process.env.username);\n      // Input password from env file\n      await driver.findElement(By.id('password')).sendKeys(process.env.password);\n      //Take Screenshot\n      let encodedString2 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image2.png', encodedString2, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      // Click on login button\n      await driver.findElement(By.name('_eventId_proceed')).click();\n      \n      // Save login for future button, Wait for it to be located\n      await driver.wait(until.elementLocated(By.id(\"idSIButton9\")),20000)\n      \n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString3 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image3.png', encodedString3, 'base64');\n      // click on the button once visible\n      await driver.findElement(By.id('idSIButton9')).click();\n      // a dialog with let's go will appear once we login in new browser window, waiting for it to be located\n      await driver.wait(until.elementLocated(By.className(\"ms-Button ms-Button--default button_bde9cc16 root-653\")),20000);\n      //Take Screenshot\n      let encodedString4 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image4.png', encodedString4, 'base64');\n      // clicking the let's go button\n      await driver.findElement(By.className('ms-Button ms-Button--default button_bde9cc16 root-653')).click();\n      // page is loaded, so switching to resources by xPath\n      await driver.findElement(By.xpath(\"//*[text()='Resources']\")).click();\n      // wait 3 sec\n      await driver.sleep(3000);\n      // waiting the first item with the below class name\n      await driver.wait(until.elementLocated(By.className(\"categoryNavItemWrapper_5ebd5061\")));\n      // clicking on first item with the below class name as it is present in first position\n      await driver.findElement(By.xpath('//*[text()=\"Academics, Classes & Registration\"]')).click();\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString5 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image5.png', encodedString5, 'base64');\n\n      // finding element My Transcript and clicking it\n      await driver.findElement(By.xpath(\"//*[text()='My Transcript']\")).click();\n      // Get all window handles and switch to latest one\n      let myTabs = await driver.getAllWindowHandles();\n      // switching to latest one\n      await driver.switchTo().window(myTabs[1]);\n      // sleep for 5 seconds\n      await driver.sleep(5000);\n      \n      // Selecting the Graduate level\n      await driver.wait(until.elementLocated(By.name('levl')),10000);\n      const selectElement = await driver.findElement(By.name('levl'));\n      const select = new Select(selectElement)\n      await select.selectByValue('GR')\n      // Giving 3 seconds gap\n      await driver.sleep(3000);\n      \n      //Take Screenshot\n      let encodedString6 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image6.png', encodedString6, 'base64');\n      // selecting Audit transcript\n      await driver.wait(until.elementLocated(By.name('tprt')),10000);\n      const selectElement2 = await driver.findElement(By.name('tprt'));\n      const select2 = new Select(selectElement2)\n      await select2.selectByValue('AUDI')\n      await driver.sleep(3000);\n      // Locate submit button\n      await driver.wait(until.elementLocated(By.xpath(\"*//input[@value='Submit']\")),10000);\n      // click submit button\n      await driver.findElement(By.xpath(\"*//input[@value='Submit']\")).click();\n      // wait 5 seconds\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString7 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario1/image7.png', encodedString7, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      // checking the elements in the page matching text \"Academic Transcript\"\n      let myElements = await driver.findElements(By.xpath('//*[text()=\"Academic Transcript\"]'));\n      // If there are any, then confirming our test is passed\n      expect(myElements.length).to.greaterThanOrEqual(1)\n      console.log('Test Success')\n  } finally {\n      // Closing the browser\n      await driver.quit();\n  }",
              "err": {},
              "uuid": "0cc88a99-e31d-4a35-979f-2be94231d988",
              "parentUUID": "433165ea-1edc-40b8-8322-46a65babd106",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cc88a99-e31d-4a35-979f-2be94231d988"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60335,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "9fdeca04-44de-4c55-a6b9-16b6106bf68b",
          "title": "Scenario 2",
          "fullFile": "/Users/sethu/Documents/personal/selenium/test/Scenario_2.js",
          "file": "/test/Scenario_2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a To-Do task for yourself",
              "fullTitle": "Scenario 2 Add a To-Do task for yourself",
              "timedOut": false,
              "duration": 69575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\n  driver.manage().window().maximize();\n  try {\n      // Open canvas URL\n      await driver.get('https://canvas.northeastern.edu');\n      // wait 5 sec\n      await driver.sleep(5000);\n      //Take Screenshot\n      let encodedString = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario2/image1.png', encodedString, 'base64');\n      // Log in to canvas button click\n      await driver.findElement(By.linkText('Log in to Canvas')).click();\n      // wait until username is located\n      await driver.wait(until.elementLocated(By.id('username')),10000);\n      await driver.findElement(By.id('username')).sendKeys(process.env.username);\n      await driver.findElement(By.id('password')).sendKeys(process.env.password);\n      //Take Screenshot\n      let encodedString2 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario2/image2.png', encodedString2, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      // Click on login button\n      await driver.findElement(By.name('_eventId_proceed')).click();\n      // Give time for duo authentication, timeout if not done in 30 Sec\n      // Wait until Calendar item is located\n      await driver.wait(until.elementLocated(By.id(\"global_nav_calendar_link\")),30000);\n      await driver.findElement(By.id('global_nav_calendar_link')).click();\n      //Take Screenshot\n      let encodedString3 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario2/image3.png', encodedString3, 'base64');\n      // wait 3 seconds\n      await driver.sleep(3000);\n      // Wait until new event link is visible\n      await driver.wait(until.elementLocated(By.id(\"create_new_event_link\")),10000)\n      // Click on new Event link\n      await driver.findElement(By.id('create_new_event_link')).click();\n      // wait until modal is opened and located\n      await driver.wait(until.elementLocated(By.className(\"ui-dialog ui-widget ui-widget-content ui-corner-all ui-draggable\")),10000);\n      let container = await driver.findElement(By.className('ui-dialog ui-widget ui-widget-content ui-corner-all ui-draggable'));\n      //Take Screenshot\n      let encodedString4 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario2/image4.png', encodedString4, 'base64');\n      // wait 3 seconds\n      await driver.sleep(3000);\n      // input title\n      await container.findElement(By.xpath('//input[@placeholder=\"Input Event Title...\"]')).sendKeys('MyCustomEvent');\n      // wait  3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString5 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario2/image5.png', encodedString5, 'base64');\n      // wait  3 sec\n      await driver.sleep(3000);\n      // Click Submit\n      await container.findElement(By.xpath('//button[@type=\"submit\"]')).click();\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString6 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario2/image6.png', encodedString6, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      console.log('Test Success')\n  } finally {\n      // Closing the browser\n      await driver.quit();\n  }",
              "err": {},
              "uuid": "008dfcf3-fc97-4014-bf41-9ff2b7b02652",
              "parentUUID": "9fdeca04-44de-4c55-a6b9-16b6106bf68b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "008dfcf3-fc97-4014-bf41-9ff2b7b02652"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7b290367-b7e2-4f52-98cf-f673a0edf888",
          "title": "Scenario 3",
          "fullFile": "/Users/sethu/Documents/personal/selenium/test/Scenario_3.js",
          "file": "/test/Scenario_3.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Download a classroom guide",
              "fullTitle": "Scenario 3 Download a classroom guide",
              "timedOut": false,
              "duration": 32619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\n  driver.manage().window().maximize();\n  try {\n      // Go to the given url\n      await driver.get('https://service.northeastern.edu/tech?id=classrooms');\n      // Wait until username is located\n      await driver.wait(until.elementLocated(By.id('username')),10000);\n      await driver.findElement(By.id('username')).sendKeys(process.env.username);\n      await driver.findElement(By.id('password')).sendKeys(process.env.password);\n      //Take Screenshot\n      let encodedString = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario3/image1.png', encodedString, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      // click the login button\n      await driver.findElement(By.name('_eventId_proceed')).click();\n      // wait until list-group-item className is visible\n      await driver.wait(until.elementLocated(By.className(\"list-group-item\")),50000);\n      //Take Screenshot\n      let encodedString2 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario3/image2.png', encodedString2, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      \n      await driver.findElement(By.xpath(\"//*[text()='007 Behrakis Health Sciences Center']\")).click();\n      \n      \n      await driver.wait(until.elementLocated(By.css(\"a[href='https://nuflex.northeastern.edu/wp-content/uploads/2020/11/Hybrid_Nuflex_Classroom.pdf']\")),10000);\n      \n      //Take Screenshot\n      let encodedString3 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario3/image3.png', encodedString3, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      // click on the available href link\n      await driver.findElement(By.css(\"a[href='https://nuflex.northeastern.edu/wp-content/uploads/2020/11/Hybrid_Nuflex_Classroom.pdf']\")).click();\n      myTabs = await driver.getAllWindowHandles();\n      await driver.switchTo().window(myTabs[1]); // switching to pdf viewer tab\n      await driver.wait(until.urlIs('https://nuflex.northeastern.edu/wp-content/uploads/2020/11/Hybrid_Nuflex_Classroom.pdf'),10000);\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString4 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario3/image4.png', encodedString4, 'base64');\n      // Wait 3 sec\n      await driver.sleep(3000)\n      console.log('Test Success')\n  } finally {\n      // Closing the browser\n      await driver.quit();\n  }",
              "err": {},
              "uuid": "14a65349-cf94-4006-b26f-632c073bd833",
              "parentUUID": "7b290367-b7e2-4f52-98cf-f673a0edf888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14a65349-cf94-4006-b26f-632c073bd833"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "f75e6f3f-0363-4e48-b1b5-f7676585d55f",
          "title": "Scenario 4",
          "fullFile": "/Users/sethu/Documents/personal/selenium/test/Scenario_4.js",
          "file": "/test/Scenario_4.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Download a DATASET",
              "fullTitle": "Scenario 4 Download a DATASET",
              "timedOut": false,
              "duration": 15299,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\n  driver.manage().window().maximize();\n  try {\n      // Go to the given url\n      await driver.get('https://onesearch.library.northeastern.edu/discovery/search?vid=01NEU_INST:NU&lang=en');\n      \n      // Wait until a link with given href is visible \n      await driver.wait(until.elementLocated(By.xpath('//a[@href=\"https://repository.library.northeastern.edu/\"]')));\n     \n      //Take Screenshot\n      let encodedString = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario4/image1.png', encodedString, 'base64');\n\n      await driver.findElement(By.xpath('//a[@href=\"https://repository.library.northeastern.edu/\"]')).click();\n      await driver.sleep(5000);\n      let myList = await driver.getAllWindowHandles();\n      // console.log('myList', myList);\n      await driver.sleep(5000);\n      await driver.switchTo().window(myList[1]);\n      \n      //Take Screenshot\n      let encodedString2 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario4/image2.png', encodedString2, 'base64');\n      await driver.findElement(By.xpath('//a[@data-original-title=\"High value datasets, such as statistical datasets and research datasets\"]')).click();\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString3 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario4/image3.png', encodedString3, 'base64');\n      await driver.sleep(3000);\n      await driver.findElement(By.xpath('//a[@title=\"Zip File\"]')).click();\n      await driver.sleep(3000);\n      \n      //Take Screenshot\n      let encodedString4 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario4/image4.png', encodedString4, 'base64');\n      await driver.sleep(3000);\n      console.log('Test Success')\n  } finally {\n      // Closing the browser\n      await driver.quit();\n  }",
              "err": {
                "message": "ElementClickInterceptedError: element click intercepted: Element <a class=\"btn btn-clear btn-block\" data-toggle=\"tooltip\" href=\"/datasets\" title=\"\" data-original-title=\"High value datasets, such as statistical datasets and research datasets\">...</a> is not clickable at point (330, 862). Other element would receive the click: <div class=\"tooltip-inner\">...</div>\n  (Session info: chrome=111.0.5563.110)",
                "estack": "ElementClickInterceptedError: element click intercepted: Element <a class=\"btn btn-clear btn-block\" data-toggle=\"tooltip\" href=\"/datasets\" title=\"\" data-original-title=\"High value datasets, such as statistical datasets and research datasets\">...</a> is not clickable at point (330, 862). Other element would receive the click: <div class=\"tooltip-inner\">...</div>\n  (Session info: chrome=111.0.5563.110)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:524:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:587:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:515:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:745:17)\n    at async Context.<anonymous> (test/Scenario_4.js:50:17)",
                "diff": null
              },
              "uuid": "d421bbb1-ed40-40a6-b3b3-7f9d3fb576bb",
              "parentUUID": "f75e6f3f-0363-4e48-b1b5-f7676585d55f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d421bbb1-ed40-40a6-b3b3-7f9d3fb576bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15299,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5e82e5f1-7900-4ba3-93c8-3e1a1d65b77a",
          "title": "Scenario 5",
          "fullFile": "/Users/sethu/Documents/personal/selenium/test/Scenario_5.js",
          "file": "/test/Scenario_5.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Job Alert alternative",
              "fullTitle": "Scenario 5 Job Alert alternative",
              "timedOut": false,
              "duration": 130668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\n  driver.manage().window().maximize();\n  try {\n      // Go to the given url\n      // Similar to Scenario_1 ***** Start *******\n      await driver.get('https://me.northeastern.edu');\n      await driver.wait(until.elementLocated(By.className('idp')),10000);\n      await driver.findElement(By.className('idp')).click();\n      await driver.wait(until.elementLocated(By.id('username')),10000);\n      await driver.findElement(By.id('username')).sendKeys(process.env.username);\n      await driver.findElement(By.id('password')).sendKeys(process.env.password);\n      await driver.findElement(By.name('_eventId_proceed')).click();\n      await driver.wait(until.elementLocated(By.id(\"idSIButton9\")),10000);\n      await driver.findElement(By.id('idSIButton9')).click();\n      await driver.wait(until.elementLocated(By.className(\"ms-Button ms-Button--default button_bde9cc16 root-653\")),10000);\n      await driver.findElement(By.className('ms-Button ms-Button--default button_bde9cc16 root-653')).click();\n      await driver.findElement(By.xpath(\"//*[text()='Resources']\")).click();\n      await driver.wait(until.elementLocated(By.className(\"categoryNavItemWrapper_5ebd5061\")),10000)\n      // Similar to Scenario_1 ***** End *******\n\n      // click on careers and Employment\n      await driver.findElement(By.xpath('//*[text()=\"Careers & Employment\"]')).click();\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image1.png', encodedString, 'base64');\n      await driver.sleep(3000);\n      // Find Link to campus Employment & Work-Study\n      await driver.findElement(By.xpath('//a[@data-gtm-sh-resources-link=\"Campus Employment & Work-Study\"]')).click();\n      let myWindowHandles = await driver.getAllWindowHandles();\n      await driver.switchTo().window(myWindowHandles[1]);\n      // Wait until Find a Job is located\n      await driver.wait(until.elementLocated(By.linkText('Find a Job')), 10000);\n      // Wait  3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString2 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image2.png', encodedString2, 'base64');\n      // Click on Find a Job\n      await driver.findElement(By.linkText('Find a Job')).click();\n      // Wait until Text below is located\n      await driver.wait(until.elementLocated(By.linkText('Find an On-Campus or Work-Study Job')), 10000);\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString3 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image3.png', encodedString3, 'base64');\n      // wait 1 sec\n      await driver.sleep(1000);\n      await driver.findElement(By.linkText('Find an On-Campus or Work-Study Job')).click();\n      await driver.wait(until.elementLocated(By.xpath('//a[@data-automation-id=\"linkButton\"]')),10000);\n      // wait 3 sec\n      await driver.sleep(3000);\n      //Take Screenshot\n      let encodedString4 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image4.png', encodedString4, 'base64');\n      // wait 1 sec\n      await driver.sleep(1000);\n      await driver.findElement(By.xpath('//a[@data-automation-id=\"linkButton\"]')).click();\n  \n      await driver.wait(until.elementLocated(By.className('wdappchrome-ac')),10000);\n      // wait 3 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString5 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image5.png', encodedString5, 'base64');\n      // wait 3 sec\n      await driver.sleep(3000);\n      await driver.findElement(By.className('wdappchrome-ac')).click();\n      // Wait to locate Jobs and Career Hub\n      await driver.wait(until.elementLocated(By.xpath('//a[@aria-label=\"Jobs and Career Hub\"]')),10000);\n      // wait 3 sec\n      await driver.sleep(3000);\n      // Click on Jobs and Career Hub\n      await driver.findElement(By.xpath('//a[@aria-label=\"Jobs and Career Hub\"]')).click();\n      await driver.sleep(2000);\n      await driver.wait(until.elementLocated(By.className('WJA2 WL41 WHA2')),10000);\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString6 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image6.png', encodedString6, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.findElement(By.className('WJA2 WL41 WHA2')).click();\n      await driver.sleep(2000);\n  \n      // for office of student employment link\n      await driver.wait(until.elementLocated(By.className('WAMR')),10000);\n      let myElements = await driver.findElements(By.className('WAMR'));\n      // Click on the 3rd Link available now\n      await myElements[2].click();\n      // Sleep for 3 sec\n      await driver.sleep(3000);\n  \n      let myWindowHandles2 = await driver.getAllWindowHandles()\n      // Switch to 3rd Tab which will be open by now\n      await driver.switchTo().window(myWindowHandles2[2]);\n  \n      await driver.wait(until.elementLocated(By.xpath('//a[@href=\"#\"]')),10000);\n      await driver.findElement(By.xpath('//a[@href=\"#\"]')).click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString7 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image7.png', encodedString7, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n  \n      await driver.wait(until.elementLocated(By.xpath('//a[@href=\"/jobX_myjobmail.aspx\"]')),10000);\n      await driver.findElement(By.xpath('//a[@href=\"/jobX_myjobmail.aspx\"]')).click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString8 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image8.png', encodedString8, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      \n      // Wait until username and password is located!\n      await driver.wait(until.elementLocated(By.id('Skin_ctl11_LoginNameText')),10000);\n      await driver.findElement(By.id('Skin_ctl11_LoginNameText')).sendKeys(process.env.username);\n      await driver.findElement(By.id('Skin_ctl11_LoginPasswordText')).sendKeys(process.env.password);\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString9 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image9.png', encodedString9, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n  \n      // Click Login\n      await driver.findElement(By.name('Skin$ctl11$ctl14')).click();\n  \n      await driver.wait(until.elementLocated(By.id('Skin_body_JobMailShell_AddNew_8')),10000);\n      await driver.findElement(By.id('Skin_body_JobMailShell_AddNew_8')).click();\n  \n      await driver.wait(until.elementLocated(By.className('GraphicShell-Body1-Even something-button pull-right')),10000);\n      let inputs = await driver.findElements(By.className('GraphicShell-Body1-Even something-button pull-right'));\n  \n      // employers\n      await inputs[inputs.length - 3].click();\n      \n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString10 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image10.png', encodedString10, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.wait(until.elementLocated(By.xpath('//a[@onclick=\"AddAll();\"]')),10000);\n      await driver.sleep(2000);\n      await driver.findElement(By.xpath('//a[@onclick=\"AddAll();\"]')).click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString11 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image11.png', encodedString11, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.findElement(By.className('btn-Link something-button')).click();\n      await driver.sleep(3000);\n  \n      //category\n      await inputs[inputs.length - 2].click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString12 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image12.png', encodedString12, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.wait(until.elementLocated(By.xpath('//a[@onclick=\"AddAll();\"]')),10000);\n      await driver.findElement(By.xpath('//a[@onclick=\"AddAll();\"]')).click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString13 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image13.png', encodedString13, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.findElement(By.className('btn-Link something-button')).click();\n      await driver.sleep(3000);\n      //Time frame\n      await inputs[inputs.length - 1].click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString14 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image14.png', encodedString14, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.wait(until.elementLocated(By.xpath('//a[@onclick=\"AddAll();\"]')),10000);\n      await driver.findElement(By.xpath('//a[@onclick=\"AddAll();\"]')).click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString15 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image15.png', encodedString15, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      await driver.findElement(By.className('btn-Link something-button')).click();\n      await driver.sleep(3000);\n      \n      await driver.wait(until.elementLocated(By.name('Skin$body$ctl02')),10000);\n      await driver.findElement(By.name('Skin$body$ctl02')).click();\n      // wait 2 sec\n      await driver.sleep(2000);\n      //Take Screenshot\n      let encodedString16 = await driver.takeScreenshot();\n      //Save Screenshot\n      await fs.writeFileSync('./Scenario5/image16.png', encodedString16, 'base64');\n      // wait 2 sec\n      await driver.sleep(2000);\n      console.log('Test Success')\n  } finally {\n      // Closing the browser\n      await driver.quit();\n  }",
              "err": {},
              "uuid": "5fa9e864-4baa-476c-821b-17281c4f7ec3",
              "parentUUID": "5e82e5f1-7900-4ba3-93c8-3e1a1d65b77a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fa9e864-4baa-476c-821b-17281c4f7ec3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 130668,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}